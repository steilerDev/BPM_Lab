<?xml version="1.0" encoding="UTF-8"?>
<definitions targetNamespace="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/" xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" name="FlowSOG">

  <documentation>
    FlowSOG Shop services
  </documentation>

  <!-- ===== -->
  <!-- Types -->
  <!-- ===== -->

  <types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://iaas.uni-stuttgart.de/labs/FlowSOG">
      <!-- <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/> -->

      <complexType name="productStatus">
        <sequence>
          <element name="currentAvailability" minOccurs="1" maxOccurs="1" default="available">
            <simpleType>
              <restriction base="xsd:string">
                <enumeration value="available"/>
                <enumeration value="not available"/>
              </restriction>
            </simpleType>
          </element>
          <element name="availableAgainInDays" type="xsd:integer" minOccurs="0" maxOccurs="1">
            <annotation>
              <documentation>
                If product is not available, this value indicates in how many days the product is expected to be available again.
              </documentation>
            </annotation>
          </element>
          <!-- <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/> -->
        </sequence>
        <anyAttribute/>
      </complexType>

      <complexType name="product">
        <sequence>
          <element name="id" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <element name="producer" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <element name="weight" type="xsd:decimal" minOccurs="0" maxOccurs="1"/>
          <element name="price" type="xsd:decimal" minOccurs="0" maxOccurs="1"/>
          <element name="status" type="FlowSOG:productStatus" minOccurs="0" maxOccurs="1"/>
          <!-- <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/> -->
        </sequence>
        <anyAttribute/>
      </complexType>

      <complexType name="productList">
        <sequence>
          <element name="product" type="FlowSOG:product" minOccurs="0" maxOccurs="unbounded"/>
          <!-- <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/> -->
        </sequence>
        <anyAttribute/>
      </complexType>

      <complexType name="order">
        <sequence>
          <element name="orderId" minOccurs="0" maxOccurs="1" type="xsd:string"/>
          <element name="customerId" type="xsd:string"/>
          <element name="products">
            <complexType>
              <sequence>
                <element name="product" minOccurs="1" maxOccurs="unbounded">
                  <complexType>
                    <sequence>
                      <element name="productId" type="xsd:string"/>
                      <element name="numberOfItems" type="xsd:integer"/>
                    </sequence>
                    <anyAttribute/>
                  </complexType>
                </element>
              </sequence>
              <anyAttribute/>
            </complexType>
          </element>
          <element name="shippingAddress" type="xsd:string"/>
          <element name="paymentDetails">
            <complexType>
              <sequence>
                <element name="bankName" type="xsd:string"/>
                <element name="bankAddress" type="xsd:string"/>
                <element name="accountNumber" type="xsd:string"/>
                <element name="accountHolderName" type="xsd:string"/>
              </sequence>
              <anyAttribute/>
            </complexType>
          </element>
          <element name="status" minOccurs="0" maxOccurs="1">
            <simpleType>
              <restriction base="xsd:string">
                <enumeration value="ordered"/>
                <enumeration value="payed"/>
                <enumeration value="shipped"/>
              </restriction>
            </simpleType>
          </element>
        </sequence>
        <anyAttribute/>
      </complexType>

      <!-- Empty response -->
      <!-- <element name="myOpResponse"><complexType/></element> -->

      <!-- Inventory Service -->

      <element name="checkAvailability">
        <complexType>
          <sequence>
            <element name="productId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="checkAvailabilityResponse">
        <complexType>
          <sequence>
            <!-- <element name="status" type="FlowSOG:productStatus"/> -->
            <element name="product" type="FlowSOG:product"/>
          </sequence>
        </complexType>
      </element>
      
      <element name="checkAvailabilityAsync">
        <complexType>
          <sequence>
            <element name="callbackUrl" type="xsd:string"/>
            <element name="customerId" type="xsd:string"/>
            <element name="productId" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
          </sequence>
        </complexType>
      </element>
      
      <element name="listProducts">
        <complexType>
          <sequence>
            <element name="limit" type="xsd:integer"/>
          </sequence>
        </complexType>
      </element>

      <element name="listProductsResponse">
        <complexType>
          <sequence>
            <element name="productList" type="FlowSOG:productList"/>
          </sequence>
        </complexType>
      </element>
      
      <element name="onFinishCheckAvailability">
        <complexType>
          <sequence>
            <element name="customerId" type="xsd:string"/>
            <!-- <element name="status" type="FlowSOG:productStatus"/> -->
            <element name="productList" type="FlowSOG:productList"/>
          </sequence>
        </complexType>
      </element>

      <!-- Order Service -->

      <element name="calcOrderCosts">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="calcOrderCostsResponse">
        <complexType>
          <sequence>
            <element name="orderCosts" type="xsd:decimal"/>
          </sequence>
        </complexType>
      </element>

      <element name="storeOrderDetails" type="FlowSOG:order"/>

      <element name="storeOrderDetailsResponse">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="getOrderDetails">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="getOrderDetailsResponse" type="FlowSOG:order"/>

      <element name="cancelOrder">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <!-- Payment Service -->

      <element name="calcTransactionCosts">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="calcTransactionCostsResponse">
        <complexType>
          <sequence>
            <element name="transactionCosts" type="xsd:decimal"/>
          </sequence>
        </complexType>
      </element>

      <element name="conductPayment">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
            <element name="amount" type="xsd:decimal"/>
          </sequence>
        </complexType>
      </element>

      <element name="conductPaymentResponse" type="FlowSOG:order"/>

      <!-- Shipment Service -->

      <element name="calcShipmentCosts">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
          </sequence>
        </complexType>
      </element>

      <element name="calcShipmentCostsResponse">
        <complexType>
          <sequence>
            <element name="shipmentCosts" type="xsd:decimal"/>
          </sequence>
        </complexType>
      </element>

      <element name="shipProducts">
        <complexType>
          <sequence>
            <element name="orderId" type="xsd:string"/>
            <element name="date" type="xsd:date"/>
          </sequence>
        </complexType>
      </element>

      <element name="shipProductsResponse" type="FlowSOG:order"/>

    </schema>
  </types>

  <!-- ======== -->
  <!-- Messages -->
  <!-- ======== -->

  <!-- SOAP faults: http://web-gmazza.rhcloud.com/blog/entry/asynchronous-web-service-calls -->
  <!-- <message name="fault"><part name="error" type="xsd:string"/></message> -->

  <!-- Inventory Service -->

  <message name="checkAvailabilityInput">
    <part name="checkAvailabilityInput" element="FlowSOG:checkAvailability"/>
  </message>
  
  <message name="checkAvailabilityOutput">
    <part name="checkAvailabilityOutput" element="FlowSOG:checkAvailabilityResponse"/>
  </message>

  <message name="checkAvailabilityAsyncInput">
    <part name="checkAvailabilityAsyncInput" element="FlowSOG:checkAvailabilityAsync"/>
  </message>

  <message name="listProductsInput">
    <part name="listProductsInput" element="FlowSOG:listProducts"/>
  </message>

  <message name="listProductsOutput">
    <part name="listProductsOutput" element="FlowSOG:listProductsResponse"/>
  </message>

  <message name="onFinishCheckAvailabilityInput">
    <part name="onFinishCheckAvailabilityInput" element="FlowSOG:onFinishCheckAvailability"/>
  </message>

  <!-- Order Service -->

  <message name="calcOrderCostsInput">
    <part name="calcOrderCostsInput" element="FlowSOG:calcOrderCosts"/>
  </message>
  
  <message name="calcOrderCostsOutput">
    <part name="calcOrderCostsOutput" element="FlowSOG:calcOrderCostsResponse"/>
  </message>

  <message name="storeOrderDetailsInput">
    <part name="storeOrderDetailsInput" element="FlowSOG:storeOrderDetails"/>
  </message>
  
  <message name="storeOrderDetailsOutput">
    <part name="storeOrderDetailsOutput" element="FlowSOG:storeOrderDetailsResponse"/>
  </message>

  <message name="getOrderDetailsInput">
    <part name="getOrderDetailsInput" element="FlowSOG:getOrderDetails"/>
  </message>
  
  <message name="getOrderDetailsOutput">
    <part name="getOrderDetailsOutput" element="FlowSOG:getOrderDetailsResponse"/>
  </message>

  <message name="cancelOrderInput">
    <part name="cancelOrderInput" element="FlowSOG:cancelOrder"/>
  </message>

  <!-- Payment Service -->

  <message name="calcTransactionCostsInput">
    <part name="calcTransactionCostsInput" element="FlowSOG:calcTransactionCosts"/>
  </message>
  
  <message name="calcTransactionCostsOutput">
    <part name="calcTransactionCostsOutput" element="FlowSOG:calcTransactionCostsResponse"/>
  </message>

  <message name="conductPaymentInput">
    <part name="conductPaymentInput" element="FlowSOG:conductPayment"/>
  </message>
  
  <message name="conductPaymentOutput">
    <part name="conductPaymentOutput" element="FlowSOG:conductPaymentResponse"/>
  </message>

  <!-- Shipment Service -->

  <message name="calcShipmentCostsInput">
    <part name="calcShipmentCostsInput" element="FlowSOG:calcShipmentCosts"/>
  </message>
  
  <message name="calcShipmentCostsOutput">
    <part name="calcShipmentCostsOutput" element="FlowSOG:calcShipmentCostsResponse"/>
  </message>

  <message name="shipProductsInput">
    <part name="shipProductsInput" element="FlowSOG:shipProducts"/>
  </message>
  
  <message name="shipProductsOutput">
    <part name="shipProductsOutput" element="FlowSOG:shipProductsResponse"/>
  </message>

  <!-- ========== -->
  <!-- Port Types -->
  <!-- ========== -->

  <portType name="InventoryPortType">
    <operation name="checkAvailability">
      <input message="tns:checkAvailabilityInput"/>
      <output message="tns:checkAvailabilityOutput"/>
      <!-- <fault message="tns:fault"/> -->
    </operation>
    <operation name="checkAvailabilityAsync">
      <input message="tns:checkAvailabilityAsyncInput"/>
    </operation>
    <operation name="listProducts">
      <input message="tns:listProductsInput"/>
      <output message="tns:listProductsOutput"/>
    </operation>
  </portType>

  <portType name="InventoryCallbackPortType">
    <operation name="onFinishCheckAvailability">
      <input message="tns:onFinishCheckAvailabilityInput"/>
    </operation>
  </portType>

  <portType name="OrderPortType">
    <operation name="calcOrderCosts">
      <input message="tns:calcOrderCostsInput"/>
      <output message="tns:calcOrderCostsOutput"/>
    </operation>
    <operation name="storeOrderDetails">
      <input message="tns:storeOrderDetailsInput"/>
      <output message="tns:storeOrderDetailsOutput"/>
    </operation>
    <operation name="getOrderDetails">
      <input message="tns:getOrderDetailsInput"/>
      <output message="tns:getOrderDetailsOutput"/>
    </operation>
    <operation name="cancelOrder">
      <input message="tns:cancelOrderInput"/>
    </operation>
  </portType>

  <portType name="PaymentPortType">
    <operation name="calcTransactionCosts">
      <input message="tns:calcTransactionCostsInput"/>
      <output message="tns:calcTransactionCostsOutput"/>
    </operation>
    <operation name="conductPayment">
      <input message="tns:conductPaymentInput"/>
      <output message="tns:conductPaymentOutput"/>
    </operation>
  </portType>

  <portType name="ShipmentPortType">
    <operation name="calcShipmentCosts">
      <input message="tns:calcShipmentCostsInput"/>
      <output message="tns:calcShipmentCostsOutput"/>
    </operation>
    <operation name="shipProducts">
      <input message="tns:shipProductsInput"/>
      <output message="tns:shipProductsOutput"/>
    </operation>
  </portType>

  <!-- ======== -->
  <!-- Bindings -->
  <!-- ======== -->

  <binding name="InventorySoapBinding" type="tns:InventoryPortType">
    <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="checkAvailability">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/checkAvailability"/>
      <input>
        <!-- <SOAP:body use="encoded" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/> -->
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
      <!-- <fault><SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/></fault> -->
    </operation>
    <operation name="checkAvailabilityAsync">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/checkAvailabilityAsync"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
    </operation>
    <operation name="listProducts">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/listProducts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
  </binding>

  <binding name="InventoryCallbackSoapBinding" type="tns:InventoryCallbackPortType">
    <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="onFinishCheckAvailability">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/onFinishCheckAvailability"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
    </operation>
  </binding>

  <binding name="OrderSoapBinding" type="tns:OrderPortType">
    <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="calcOrderCosts">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Order/calcOrderCosts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
    <operation name="storeOrderDetails">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Order/storeOrderDetails"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
    <operation name="getOrderDetails">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Order/getOrderDetails"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
    <operation name="cancelOrder">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Order/cancelOrder"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
    </operation>
  </binding>

  <binding name="PaymentSoapBinding" type="tns:PaymentPortType">
    <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="calcTransactionCosts">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Payment/calcTransactionCosts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
    <operation name="conductPayment">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Payment/conductPayment"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
  </binding>

  <binding name="ShipmentSoapBinding" type="tns:ShipmentPortType">
    <SOAP:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="calcShipmentCosts">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Shipment/calcShipmentCosts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
    <operation name="shipProducts">
      <SOAP:operation style="document" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Shipment/shipProducts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"/>
      </output>
    </operation>
  </binding>

  <!-- ======== -->
  <!-- Services -->
  <!-- ======== -->

  <service name="InventoryService">
    <port name="InventoryPort" binding="tns:InventorySoapBinding">
      <SOAP:address location="http://46.101.159.46:3000/InventoryService/InventoryPort"/>
    </port>
  </service>

  <!-- This service endpoint has to be provided by the invoker, e.g., the BPEL workflow invoking the InventoryService -->
  <service name="InventoryCallbackService">
    <port name="InventoryCallbackPort" binding="tns:InventoryCallbackSoapBinding">
      <SOAP:address location="http://localhost:8080/ode/processes/IntentoryCallbackService"/>
    </port>
  </service>

  <service name="OrderService">
    <port name="OrderPort" binding="tns:OrderSoapBinding">
      <SOAP:address location="http://46.101.159.46:3000/OrderService/OrderPort"/>
    </port>
  </service>

  <service name="PaymentService">
    <port name="PaymentPort" binding="tns:PaymentSoapBinding">
      <SOAP:address location="http://46.101.159.46:3000/PaymentService/PaymentPort"/>
    </port>
  </service>

  <service name="ShipmentService">
    <port name="ShipmentPort" binding="tns:ShipmentSoapBinding">
      <SOAP:address location="http://46.101.159.46:3000/ShipmentService/ShipmentPort"/>
    </port>
  </service>

</definitions>