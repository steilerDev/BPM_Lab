<!-- ConductOrder BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sat Dec 03 22:37:03 CET 2016 -->
<bpel:process name="ConductOrder"
              targetNamespace="http://group-one"
              suppressJoinFailure="yes"
              xmlns:tns="http://group-one"
              xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
              xmlns:ns="http://iaas.uni-stuttgart.de/labs/FlowSOG">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"
                 location="bpm-lab.wsdl" 
                 importType="http://schemas.xmlsoap.org/wsdl/" />

	<bpel:import namespace="http://group-one"
	             location="ConductOrderArtifacts.wsdl"  
	             importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                          partnerLinkType="tns:ConductOrder"
                          myRole="ConductOrderProvider" />
                          
        <bpel:partnerLink name="CheckAvailabilityPL" 
                          partnerLinkType="tns:CheckAvailabilityPLT" 
                          partnerRole="CheckAvailabilityPLRole" />
                         
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                       messageType="tns:ConductOrderRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                       messageType="tns:ConductOrderResponseMessage"/>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in ConductOrder.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:ConductOrder"
                 operation="process" 
                 variable="input"
                 createInstance="yes"/>

        <!-- TODO: try parallel -->
        <bpel:forEach parallel="no" counterName="index" name="ForEachProduct">
            <bpel:startCounterValue>
                <![CDATA[1]]>
            </bpel:startCounterValue>
            <bpel:finalCounterValue>
                <![CDATA[count($input.payload/tns:input/tns:products/tns:product)]]>
            </bpel:finalCounterValue>
            
            <bpel:scope name="CheckAvailabilityScope">
                <bpel:sequence name="CheckProductAvailability">
                    <bpel:assign validate="no" name="AssignProductID">
                        <bpel:copy>
                            <bpel:from>
                                <bpel:literal>
                                    <FlowSOG:checkAvailability xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG"
                                                               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                                        <FlowSOG:productId>FlowSOG:productId</FlowSOG:productId>
                                    </FlowSOG:checkAvailability>
                                </bpel:literal>
                            </bpel:from>
                            <bpel:to part="checkAvailabilityInput" variable="CheckAvailabilityPLRequest"/>
                        </bpel:copy>
                        <bpel:copy>
                            <bpel:from part="payload" variable="input">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                    <![CDATA[tns:input/tns:products/tns:product[round($index)]/tns:productId]]>
                                </bpel:query>
                            </bpel:from>
                            <bpel:to part="checkAvailabilityInput" variable="CheckAvailabilityPLRequest">
                                <bpel:query>
                                    <![CDATA[ns:productId]]>
                                </bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke name="InvokeCheckAvailability" 
                                 partnerLink="CheckAvailabilityPL" 
                                 operation="checkAvailability" 
                                 portType="ns:InventoryPortType" 
                                 inputVariable="CheckAvailabilityPLRequest" 
                                 outputVariable="CheckAvailabilityPLResponse" />
                           
                    <bpel:if name="IfProductNotAvailable">
                        <bpel:condition>
                            <![CDATA[$CheckAvailabilityPLResponse.checkAvailabilityOutput/ns:product/ns:status/ns:currentAvailability = "not available"]]>
                        </bpel:condition>
                        <bpel:throw name="ThrowProductNotAvailableFault" faultName="tns:ProductNotAvailableFault"/>
                    </bpel:if>
                    
                </bpel:sequence>
                
                <!-- Todo: Move up -->
                <bpel:variables>
                    <bpel:variable name="CheckAvailabilityPLResponse" messageType="ns:checkAvailabilityOutput"/>
                    <bpel:variable name="CheckAvailabilityPLRequest" messageType="ns:checkAvailabilityInput"/>
                </bpel:variables>
                
                <bpel:faultHandlers>
                    <bpel:catch faultName="tns:ProductNotAvailableFault">
                        <bpel:sequence name="ProductNotAvailable">
                            <bpel:assign validate="no" name="AssignProductNotAvailable">
                                
                                <bpel:copy>
                                    <bpel:from>
                                        <bpel:literal>
                                            <tns:ConductOrderResponse xmlns:tns="http://group-one" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                                                <tns:result>Item not available!</tns:result>
                                            </tns:ConductOrderResponse>
                                        </bpel:literal>
                                    </bpel:from>
                                    <bpel:to part="payload" variable="output"/>
                                </bpel:copy>
                                
                            </bpel:assign>
                            <bpel:reply name="replyOutput" 
                                        partnerLink="client" 
                                        operation="process" 
                                        portType="tns:ConductOrder" 
                                        variable="output"/>
                            <bpel:exit name="ProductNotAvailableStop"></bpel:exit>
                        </bpel:sequence>
                    </bpel:catch>
                </bpel:faultHandlers>
            </bpel:scope>
        </bpel:forEach>
        
        <!-- Generate reply to synchronous request -->
        <bpel:assign validate="no" name="ProductsAvailable">
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve">All Products available!</bpel:literal>
                </bpel:from>
                <bpel:to part="payload" variable="output">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[tns:result]]>
                    </bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:ConductOrder"
               operation="process" 
               variable="output" />
    </bpel:sequence>
</bpel:process>

